/*
 * Trade API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: current
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Order time condition.  Условие по времени действия заявки.
    /// </summary>
    [DataContract(Name = "OrderValidBefore")]
    public partial class OrderValidBefore : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public OrderValidBeforeType? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderValidBefore" /> class.
        /// </summary>
        /// <param name="type">type.</param>
        /// <param name="time">Time of order canceled on the server in UTC.  Время, когда заявка была отменена на сервере. В UTC..</param>
        public OrderValidBefore(OrderValidBeforeType? type = default(OrderValidBeforeType?), DateOnly? time = default(DateOnly?))
        {
            this.Type = type;
            this.Time = time;
        }

        /// <summary>
        /// Time of order canceled on the server in UTC.  Время, когда заявка была отменена на сервере. В UTC.
        /// </summary>
        /// <value>Time of order canceled on the server in UTC.  Время, когда заявка была отменена на сервере. В UTC.</value>
        [DataMember(Name = "time", EmitDefaultValue = true)]
        public DateOnly? Time { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderValidBefore {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
